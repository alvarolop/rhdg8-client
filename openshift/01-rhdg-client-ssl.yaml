apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhdg8-client
  annotations:
    description: Template to deploy a Java client application to connecto to a RHDG cluster on OCP.
    tags: infinispan,datagrid,java,springboot
    iconClass: icon-rh-openjdk
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/support-url: https://access.redhat.com
labels:
  template: rhdg8-client
objects:

  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
      namespace: ${APP_NAMESPACE}
    spec:
      ports:
      - name: 8080-tcp
        port: 8080
        protocol: TCP
        targetPort: 8080
      selector:
        app: ${APP_NAME}

  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: ${APP_NAME}
      namespace: ${APP_NAMESPACE}
    spec:
      port:
        targetPort: 8080
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Allow
      to:
        kind: Service
        name: ${APP_NAME}

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
      namespace: ${APP_NAMESPACE}
    spec:
      replicas: 1
      revisionHistoryLimit: 0
      selector:
        matchLabels:
          app: ${APP_NAME}
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: RollingUpdate
      template:
        metadata:
          name: ${APP_NAME}
          labels:
            app: ${APP_NAME}
        spec:
          containers:
          - name: ${APP_NAME}
            image: quay.io/alopezme/rhdg8-client:latest
            imagePullPolicy: Always
            env:
              - name: DATAGRID_HOST
                value: ${RHDG_CLUSTER}
              - name: DATAGRID_PORT
                value: "11222"
              - name: DATAGRID_AUTH_ENABLED
                value: ${DATAGRID_AUTH_ENABLED}
              - name: DATAGRID_SSL_ENABLED
                value: ${DATAGRID_SSL_ENABLED}
              - name: DATAGRID_SSL_SNI_HOST_NAME
                value: "${RHDG_CLUSTER}.${APP_NAMESPACE}.svc"
            ports:
              - containerPort: 8080
                protocol: TCP
                name: tcp-8080
            resources: {}
            volumeMounts:
              - name: app-config
                mountPath: "${MOUNT_PATH}/application.properties"
                readOnly: true
                subPath: application.properties
              - name: app-config
                mountPath: "${MOUNT_PATH}/logback-spring.xml"
                readOnly: true
                subPath: logback-spring.xml
              - name: ssl-certificate
                mountPath: "${MOUNT_PATH}/tls.crt"
                subPath: tls.crt
                readOnly: true
          volumes:
            - name: app-config
              configMap:
                name: ${APP_NAME}-config
            - name: ssl-certificate
              secret:
                secretName: "${RHDG_CLUSTER}-cert-secret"
                items:
                  - key: tls.crt
                    path: tls.crt

parameters:
- name: APP_NAME
  description: "The name of the application."
  required: true
- name: APP_NAMESPACE
  description: "The namespace of the application."
  required: true
- name: MOUNT_PATH
  description: "The path where the configuration file of the application is mounted."
  value: "/deployments/config"
  required: true
- name: RHDG_CLUSTER
  description: "The name of the cluster that this client will connect to. It is needed to automatically configure ssl."
  value: "rhdg"
  required: false
- name: DATAGRID_AUTH_ENABLED
  description: "If the RHDG will try to authenticate to the Red Hat Data Grid server."
  value: "true"
  required: false
- name: DATAGRID_SSL_ENABLED
  description: "If the RHDG will try to establish an SSL connection to the Red Hat Data Grid server."
  value: "true"
  required: false
