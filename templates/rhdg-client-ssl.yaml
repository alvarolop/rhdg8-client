apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhdg8-client
  annotations:
    description: Template to deploy a Java client application to connecto to a RHDG cluster on OCP.
    tags: infinispan,datagrid,java,springboot
    iconClass: icon-rh-openjdk
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/support-url: https://access.redhat.com
labels:
  template: rhdg8-client
objects:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
    namespace: ${APP_NAMESPACE}
  spec:
    lookupPolicy:
      local: false
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
    namespace: ${APP_NAMESPACE}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: ${APPLICATION_NAME}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: ${APPLICATION_NAME}
    namespace: ${APP_NAMESPACE}
  spec:
    port:
      targetPort: 8080
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Allow
    to:
      kind: Service
      name: ${APPLICATION_NAME}
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
    namespace: ${APP_NAMESPACE}
  spec:
    replicas: 1
    revisionHistoryLimit: 0
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        name: ${APPLICATION_NAME}
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
        - name: ${APPLICATION_NAME}
          image: ${APPLICATION_NAME}:latest
          imagePullPolicy: Always
          env:
            - name: DATAGRID_HOST
              value: ${RHDG_CLUSTER_NAME}
            - name: DATAGRID_PORT
              value: "11222"
            - name: DATAGRID_AUTH_ENABLED
              value: ${DATAGRID_AUTH_ENABLED}
            - name: DATAGRID_SSL_ENABLED
              value: ${DATAGRID_SSL_ENABLED}
          ports:
            - containerPort: 8080
              protocol: TCP
          resources: {}
          volumeMounts:
            - name: app-config
              mountPath: "${MOUNT_PATH}/application.properties"
              readOnly: true
              subPath: application.properties
            - name: app-config
              mountPath: "${MOUNT_PATH}/logback-spring.xml"
              readOnly: true
              subPath: logback-spring.xml
            - name: ssl-certificate
              mountPath: "${MOUNT_PATH}/tls.crt"
              subPath: tls.crt
              readOnly: true
        volumes:
          - name: app-config
            configMap:
              name: ${APPLICATION_NAME}-config
          - name: ssl-certificate
            secret:
              secretName: "${RHDG_CLUSTER_NAME}-cert-secret"
              items:
                - key: tls.crt
                  path: tls.crt
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
    namespace: ${APP_NAMESPACE}
  spec:
    nodeSelector:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: ${GIT_CONTEXT_DIR}
      git:
        uri: ${GIT_REPOSITORY}
        ref: ${GIT_BRANCH}
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: ubi8-openjdk-11:1.3
          namespace: openshift
      type: Source
    failedBuildsHistoryLimit: 1
    successfulBuildsHistoryLimit: 0
    triggers:
    - type: ConfigChange
    - type: ImageChange
parameters:
- name: APPLICATION_NAME
  description: "The name of the application."
  required: true
- name: APP_NAMESPACE
  description: "The namespace of the application."
  required: true
- name: MOUNT_PATH
  description: "The path where the configuration file of the application is mounted."
  value: "/deployments/config"
  required: true
- name: GIT_REPOSITORY
  description: "The git repository of the application."
  required: true
- name: GIT_BRANCH
  description: "The git branch of the application."
  required: true
  value: "main"
- name: GIT_CONTEXT_DIR
  description: "The path where the application code is under the git repository."
  value: "hotrod-tester"
  required: false
- name: RHDG_CLUSTER_NAME
  description: "The name of the cluster that this client will connect to. It is needed to automatically configure ssl."
  value: "rhdg"
  required: false
- name: DATAGRID_AUTH_ENABLED
  description: "If the RHDG will try to authenticate to the Red Hat Data Grid server."
  value: "true"
  required: false
- name: DATAGRID_SSL_ENABLED
  description: "If the RHDG will try to establish an SSL connection to the Red Hat Data Grid server."
  value: "true"
  required: false
